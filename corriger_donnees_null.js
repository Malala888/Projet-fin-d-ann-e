// Script pour corriger les donn√©es NULL dans la base de donn√©es
// Utilise fetch pour appeler l'API existante

async function corrigerDonneesNull() {
  try {
    console.log("üîß Correction des donn√©es NULL dans la base de donn√©es...");

    // R√©cup√©rer tous les √©tudiants
    const response = await fetch('http://localhost:5000/etudiants');
    const etudiants = await response.json();

    console.log(`üìã Traitement de ${etudiants.length} √©tudiants...`);

    for (const etudiant of etudiants) {
      // V√©rifier si les champs sont NULL
      if (!etudiant.Filiere || !etudiant.Parcours) {
        console.log(`üîß Mise √† jour de ${etudiant.Nom} (${etudiant.Immatricule})`);

        // Pr√©parer les nouvelles donn√©es
        const donneesCorrigees = {
          Nom: etudiant.Nom,
          Email: etudiant.Email,
          Mot_de_passe: etudiant.Mot_de_passe,
          Filiere: etudiant.Filiere || 'Informatique',
          Parcours: etudiant.Parcours || 'D√©veloppement Web'
        };

        try {
          // Mettre √† jour via l'API PUT
          const updateResponse = await fetch(`http://localhost:5000/etudiants/${etudiant.Immatricule}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(donneesCorrigees)
          });

          if (updateResponse.ok) {
            console.log(`‚úÖ ${etudiant.Nom} mis √† jour avec Fili√®re: ${donneesCorrigees.Filiere}, Parcours: ${donneesCorrigees.Parcours}`);
          } else {
            console.log(`‚ùå Erreur mise √† jour ${etudiant.Nom}:`, await updateResponse.text());
          }
        } catch (updateError) {
          console.log(`‚ùå Erreur lors de la mise √† jour de ${etudiant.Nom}:`, updateError.message);
        }
      } else {
        console.log(`‚úÖ ${etudiant.Nom} a d√©j√† des donn√©es compl√®tes`);
      }
    }

    console.log("\nüîç V√©rification finale...");
    const finalResponse = await fetch('http://localhost:5000/etudiants');
    const etudiantsFinaux = await finalResponse.json();

    let compteMisAJour = 0;
    for (const etudiant of etudiantsFinaux) {
      if (etudiant.Filiere && etudiant.Parcours) {
        compteMisAJour++;
      }
    }

    console.log(`‚úÖ ${compteMisAJour}/${etudiantsFinaux.length} √©tudiants ont maintenant des donn√©es compl√®tes`);

  } catch (err) {
    console.error("‚ùå Erreur:", err.message);
    console.log("üí° Assurez-vous que le serveur backend est d√©marr√© sur le port 5000");
  }
}

// Ex√©cuter la correction
corrigerDonneesNull();